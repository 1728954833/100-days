// 1. 请说出下列最终的执行结果并解释
// 答: 10,应为var变量会被提升到全局最后函数执行打印全局的变量i

// 2. 请说出下列最终执行结果并解释
// 答: 会报错, let所在的作用域会照成暂时性死区,必须先声明变量在访问

// 3. 结合es6新语法，用最简单的方式找出数组最小值
var arr = [12,34,32,89,4]
const min = arr.reduce((min, next) => {
    if (min > next) return next
    return min
})
console.log(min)


// 4. 请详细说明var let const 三种变量声明方式
// var: 会有变量提升,不会独立出块作用域
// let: 不会变量提升,使用前必须先声明。会独立出块作用域
// const: 声明并赋值后不能改变值,其他和let一样

// 5. 请说出下列代码最终输出结果
// 答: 为20. this总是指向调用对象，当obj.fn时会指向obj此时fn函数中的this为obj,而箭头函数中的this会去寻找上一级上下文的this，在这个地方上一级上下文的this就是obj。

// 6.简述Symbol类型的用处
// 答: 可以给对象的私有属性使用Symbol,在扩展插件时为了防止覆盖原来库属性也可以使用。

// 7.浅拷贝和深拷贝
// 答: 浅拷贝只拷贝值,被引用的对象也只会拷贝当前引用。深拷贝在拷贝对象时会把对象所引用的值也拷贝。

// 8.简述ts和js
// 答: ts相比于js添加了类型系统,使代码编译时会去检查类型传入是否正确

// 9.ts优缺点
// 答: 有了严格的类型检查可以很好的防范null.xxx和undefined.xx这类错误。在进行阅读和重构时也会更加方便。缺点就是没有js那么灵活吧

// 10.引用技术工作原理
// 答: 假如在代码执行过程中有一个对象为A当变量引用了A对应的引用计数器就会+1如果引用失效就会-1当减到0就会触发垃圾回收.缺点:当A对象属性引用了B对象属性，B对象属性又引用了A对象属性就会触发循环引用照成内存泄漏

// 11.标记清除工作原理
// 答: 标记清除算法有两个阶段分别是标记和清除。在标记阶段从根对象开始进行遍历，在此期间对可达对象进行标记。在之后的清除阶段从堆内存进行线性遍历，如果对象没有被标记则进行回收。

// 12.V8垃圾回收
// 答: 在V8中把内存分为两部分。一部分叫新生代, 另一部分叫老生代。对于新生代部分又分为from和to，在代码执行时遇到变量就往from里面存储当from存储到一定程度后会对from空间进行GC和空间整理然后把from的内容全部拷贝到to之后在交换from和to。在这个期间如果有对象在进行了一轮回收还存在就会晋升到老生代。老生代里面会使用标记清除的方式进行垃圾回收，在晋升过程中如果说空间不足会对老生代进行标记整理

// 13.增量标记算法
// 答: 垃圾回收时会暂停程序，增量标记算法会避免这种问题在GC没有执行完也可以交换控制权回程序提高回收效率时使用